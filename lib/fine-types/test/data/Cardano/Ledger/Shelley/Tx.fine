module Tx where

import Address(Addr, Addr-rwd, Ix);
import Crypto(VKey, Sig, ScriptHash, Script);
import PParams(Coin, Slot);
import Delegation(DCert);

-- Abstract 

TxId = _ ; -- transaction identifier
Metadatum = _ ; -- metadatum
MetadataHash = _ ; -- hash of transaction metadata
Update = _ ; -- protocol parameter update


-- Derived 
TxIn = TxId × Ix; -- transaction input
TxOut = Addr × Coin; -- transaction output
UTxO = TxIn → TxOut; -- unspent tx outputs
Wdrl = Addr-rwd → Coin; -- reward withdrawal
Metadata = ℕ → Metadatum; -- metadata

TxBody = 
    { txins : ℙ TxIn  -- transaction inputs
    , txouts : Ix → TxOut  --  transaction outputs
    , txcerts : DCert∗  -- delegation certificates
    , txfee : Coin  -- transaction fee
    , txttl : Slot  -- time to live
    , txwdrls : Wdrl  -- withdrawals
    , txwitsVKey : VKey → Sig --  VKey witnesses
    , txwitsScript : ScriptHash → Script --  script witnesses
    , txMDhash : MetadataHash? --  metadata hash  
    , txbody : TxBody  -- transaction body
    };

Tx = 
    { txup : Update? --  protocol parameter update
    , txMD : Metadata? --  metadata
    , txWitness : TxWitness --  transaction witnesses
    };

TxWitness = (VKey → Sig) × (ScriptHash → Script);